import telebot
from config import BOT_TOKEN
from logic import ExpenseManager
from datetime import datetime
from telebot import types

bot = telebot.TeleBot(BOT_TOKEN)
manager = ExpenseManager()

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_handler(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    btn1 = types.KeyboardButton("/add")
    btn2 = types.KeyboardButton("/list")
    btn3 = types.KeyboardButton("/delete")
    btn4 = types.KeyboardButton("/filter")
    btn5 = types.KeyboardButton("/stats")
    btn6 = types.KeyboardButton("/week")
    btn7 = types.KeyboardButton("/month")
    btn8 = types.KeyboardButton("/chart")
    btn9 = types.KeyboardButton("/help")
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9)

    bot.send_message(message.chat.id,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É—á—ë—Ç–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤ üí∏\n\n"
        "–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—ã!\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "/add ‚Äî –¥–æ–±–∞–≤–∏—Ç—å —Ç—Ä–∞—Ç—É\n"
        "/list ‚Äî —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç—Ä–∞—Ç\n"
        "/delete ‚Äî —É–¥–∞–ª–∏—Ç—å —Ç—Ä–∞—Ç—É –ø–æ ID\n"
        "/filter ‚Äî —Ñ–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n"
        "/stats ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n"
        "/week ‚Äî —Ç—Ä–∞—Ç—ã –∑–∞ –Ω–µ–¥–µ–ª—é\n"
        "/month ‚Äî —Ç—Ä–∞—Ç—ã –∑–∞ –º–µ—Å—è—Ü\n"
        "/chart ‚Äî –≥—Ä–∞—Ñ–∏–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –¥–Ω—è–º\n"
        "/help ‚Äî –ø–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é",
        reply_markup=markup
    )

# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def help_handler(message):
    bot.send_message(message.chat.id,
        "–í–æ—Ç –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–Ω–æ–π üìå\n\n"
        "/add ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é —Ç—Ä–∞—Ç—É. –ù–∞–ø–∏—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Å—É–º–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä: –µ–¥–∞ 500).\n"
        "/list ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Ç–≤–æ–∏ —Ç—Ä–∞—Ç—ã —Å –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º.\n"
        "/delete ‚Äî —É–¥–∞–ª—è–µ—Ç —Ç—Ä–∞—Ç—É. –ù–∞–ø–∏—à–∏ ID –ø–æ—Å–ª–µ —Å–ø–∏—Å–∫–∞.\n"
        "/filter ‚Äî –Ω–∞–ø–∏—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∏ —è –ø–æ–∫–∞–∂—É –≤—Å–µ —Ç—Ä–∞—Ç—ã –ø–æ –Ω–µ–π.\n"
        "/stats ‚Äî –ø–æ–∫–∞–∂—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (–Ω–∞–ø—Ä–∏–º–µ—Ä: –µ–¥–∞ ‚Äî 2000 —Ç–≥).\n"
        "/week ‚Äî –ø–æ–∫–∞–∂—É –≤—Å–µ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π –∏ –∏—Ö —Å—É–º–º—É.\n"
        "/month ‚Äî —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü + —Å—É–º–º–∞.\n"
        "/chart ‚Äî –ø—Ä–∏—à–ª—é –≥—Ä–∞—Ñ–∏–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –¥–Ω—è–º.\n"
    )


# –ö–æ–º–∞–Ω–¥–∞ /add
@bot.message_handler(commands=['add'])
def add_handler(message):
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Ç—Ä–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É–º–º–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –µ–¥–∞ 500)")
    bot.register_next_step_handler(message, save_expense)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–∞—Ç—ã
def save_expense(message):
    try:
        category, amount = message.text.split()
        amount = float(amount)
        now = datetime.now()
        date = now.strftime('%Y-%m-%d')
        time = now.strftime('%H:%M:%S')
        manager.add_expense(message.from_user.id, category, amount, date, time)
        bot.send_message(message.chat.id, f"–°–æ—Ö—Ä–∞–Ω–∏–ª: {category} ‚Äî {amount} —Ç–≥ –≤ {time}")
    except:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞! –ù–∞–ø–∏—à–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É–º–º–∞")

# –ö–æ–º–∞–Ω–¥–∞ /list
@bot.message_handler(commands=['list'])
def list_handler(message):
    expenses = manager.get_expenses(message.from_user.id)
    if not expenses:
        bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤.")
        return
    text = "–¢–≤–æ–∏ —Ä–∞—Å—Ö–æ–¥—ã:\n"
    for exp_id, cat, amt, date, time in expenses:
        text += f"{date} {time} ‚Äî {cat}: {amt} —Ç–≥ (ID: {exp_id})\n"
    bot.send_message(message.chat.id, text)

# –ö–æ–º–∞–Ω–¥–∞ /delete
@bot.message_handler(commands=['delete'])
def delete_handler(message):
    expenses = manager.get_expenses(message.from_user.id)
    if not expenses:
        bot.send_message(message.chat.id, "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤, –Ω–µ—á–µ–≥–æ —É–¥–∞–ª—è—Ç—å.")
        return
    
    text = "–í–æ—Ç —Ç–≤–æ–∏ —Ç—Ä–∞—Ç—ã:\n"
    for exp_id, cat, amt, date, time in expenses:
        text += f"ID: {exp_id} ‚Äî {date} {time} ‚Äî {cat}: {amt} —Ç–≥\n"
    text += "\n–ù–∞–ø–∏—à–∏ ID —Ç—Ä–∞—Ç—ã, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å:"
    bot.send_message(message.chat.id, text)
    bot.register_next_step_handler(message, delete_expense)

def delete_expense(message):
    try:
        expense_id = int(message.text)
        manager.delete_expense(message.from_user.id, expense_id)
        bot.send_message(message.chat.id, f"‚úÖ –¢—Ä–∞—Ç–∞ —Å ID {expense_id} —É–¥–∞–ª–µ–Ω–∞.")
    except:
        bot.send_message(message.chat.id, "‚ö†Ô∏è –û—à–∏–±–∫–∞! –ù–∞–ø–∏—à–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID.")

# –ö–æ–º–∞–Ω–¥–∞ /stats
@bot.message_handler(commands=['stats'])
def stats_handler(message):
    stats = manager.get_category_stats(message.from_user.id)
    if not stats:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
        return
    text = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:\n"
    for cat, total in stats:
        text += f"{cat}: {total} —Ç–≥\n"
    bot.send_message(message.chat.id, text)

# –ö–æ–º–∞–Ω–¥–∞ /week
@bot.message_handler(commands=['week'])
def week_handler(message):
    data = manager.get_week_expenses(message.from_user.id)
    if not data:
        bot.send_message(message.chat.id, "–ó–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é —Ç—Ä–∞—Ç –Ω–µ—Ç.")
        return
    total_week = sum([amt for _, amt, _, _ in data])
    text = "–†–∞—Å—Ö–æ–¥—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é:\n"
    for cat, amt, date, time in data:
        text += f"{date} {time} ‚Äî {cat}: {amt} —Ç–≥\n"
    text += f"\n–û–±—â–∞—è —Å—É–º–º–∞: {total_week} —Ç–≥"
    bot.send_message(message.chat.id, text)

# –ö–æ–º–∞–Ω–¥–∞ /month
@bot.message_handler(commands=['month'])
def month_handler(message):
    data = manager.get_month_expenses(message.from_user.id)
    if not data:
        bot.send_message(message.chat.id, "–í —ç—Ç–æ–º –º–µ—Å—è—Ü–µ —Ç—Ä–∞—Ç –ø–æ–∫–∞ –Ω–µ—Ç.")
        return
    total_month = sum([amt for _, amt, _, _ in data])
    text = "–†–∞—Å—Ö–æ–¥—ã –∑–∞ —ç—Ç–æ—Ç –º–µ—Å—è—Ü:\n"
    for cat, amt, date, time in data:
        text += f"{date} {time} ‚Äî {cat}: {amt} —Ç–≥\n"
    text += f"\n–û–±—â–∞—è —Å—É–º–º–∞: {total_month} —Ç–≥"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['filter'])
def filter_handler(message):
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –ø–æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å —Ä–∞—Å—Ö–æ–¥—ã:")
    bot.register_next_step_handler(message, show_filtered)

def show_filtered(message):
    category = message.text.strip().lower()
    data = manager.get_expenses_by_category(message.from_user.id, category)
    if not data:
        bot.send_message(message.chat.id, f"–ù–µ—Ç —Ç—Ä–∞—Ç –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}'.")
        return
    text = f"–†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{category}':\n"
    total = 0
    for _, amt, date, time in data:
        total += amt
        text += f"{date} {time} ‚Äî {amt} —Ç–≥\n"
    text += f"\n–í—Å–µ–≥–æ –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {total} —Ç–≥"
    bot.send_message(message.chat.id, text)

@bot.message_handler(commands=['chart'])
def chart_handler(message):
    path = manager.generate_daily_chart(message.from_user.id)
    if not path:
        bot.send_message(message.chat.id, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞.")
        return
    with open(path, 'rb') as photo:
        bot.send_photo(message.chat.id, photo)



bot.polling()
